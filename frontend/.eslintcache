[{"C:\\Users\\User\\Desktop\\VS Code\\React-Django-To-Do-App\\frontend\\src\\App.js":"1","C:\\Users\\User\\Desktop\\VS Code\\React-Django-To-Do-App\\frontend\\src\\reportWebVitals.js":"2"},{"size":4457,"mtime":1606530049145,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":499162500000,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1jbxga2",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\VS Code\\React-Django-To-Do-App\\frontend\\src\\App.js",["11"],"import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [],\n      activeItem: {\n        id:null,\n        title:'',\n        completed:false,\n      },\n      editing:false,\n    }\n    this.fetchTasks = this.fetchTasks.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.getCookie = this.getCookie.bind(this)\n    this.startEdit = this.startEdit.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n  };\n\n  getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim();\n        // Does this cookie string begin with the name we want?\n        if (cookie.substring(0, name.length + 1) === (name + '=')) {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  componentWillMount() {\n    this.fetchTasks()\n  }\n\n  fetchTasks() {\n    console.log('Fetching...')\n\n    fetch('http://127.0.0.1:8000/api/task-list/')\n    .then(response => response.json())\n    .then(data => \n      this.setState({\n        todoList: data\n      }))\n  }\n\n  handleChange(e){\n    var name = e.target.name\n    var value = e.target.value\n    console.log('Name:', name)\n    console.log('Value:', value)\n\n    this.setState({\n      activeItem:{\n        ...this.state.activeItem,\n        title:value\n      }\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    console.log('ITEM:', this.state.activeItem)\n\n    var csrftoken = this.getCookie('csrftoken')\n\n    var url = 'http://127.0.0.1:8000/api/task-create/'\n\n    if(this.state.editing == true){\n      url = `http://127.0.0.1:8000/api/task-update/${this.state.activeItem.id}/`\n      this.setState({\n        editing:false\n      })\n    }\n\n    fetch(url, {\n      method: 'POST',\n      headers:{\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify(this.state.activeItem)\n    }).then((response) => {\n      this.fetchTasks()\n      this.setState({\n        activeItem: {\n          id:null,\n          title:'',\n          completed:false,\n        }\n      })\n    }).catch(function(error){\n      console.log('ERROR:', error)\n    })\n  }\n\n  startEdit(task) {\n    this.setState({\n      activeItem: task,\n      editing: true,\n    })\n  }\n\n  deleteItem(task) {\n    var csrftoken = this.getCookie('csrftoken')\n\n    fetch(`http://127.0.0.1:8000/api/task-delete/${task.id}/`, {\n      method: 'DELETE',\n      headers:{\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n    }).then((response) =>{\n      this.fetchTasks()\n    })\n  }\n\n  render() {\n    var tasks = this.state.todoList\n    var self = this\n    return (\n      <div className=\"container\">\n        <div id=\"task-container\">\n\n          <div id=\"form-wrapper\">\n            <form onSubmit={this.handleSubmit} id=\"form\">\n              <div className=\"flex-wrapper\">\n                <div style={{ flex: 6 }}>\n                <input onChange={this.handleChange} className=\"form-control\" id=\"title\" value={this.state.activeItem.title} type=\"text\" name=\"title\" placeholder=\"Add task..\" />\n                </div>\n\n                <div style={{ flex: 1 }}>\n                  <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name=\"Add\" />\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <div id=\"list-wrapper\">\n            {tasks.map(function (task, index) {\n              return (\n                <div key={index} className=\"task-wrapper flex-wrapper\">\n\n                  <div style={{flex:7}}>\n                    <span>{task.title}</span>\n                  </div>\n\n                  <div style={{flex:1}}>\n                    <button onClick={() => self.startEdit(task)} className=\"btn btn-sm btn-outline-info\">Edit</button>\n                  </div>\n\n                  <div style={{flex:1}}>\n                    <button onClick={() => self.deleteItem(task)} className=\"btn btn-sm btn-outline-dark delete\">-</button>\n                  </div>\n                  \n                </div>\n              )\n            })}\n          </div>\n          \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n\n","C:\\Users\\User\\Desktop\\VS Code\\React-Django-To-Do-App\\frontend\\src\\reportWebVitals.js",[],{"ruleId":"12","severity":1,"message":"13","line":77,"column":27,"nodeType":"14","messageId":"15","endLine":77,"endColumn":29},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]